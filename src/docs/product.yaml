/products:
  get:
    tags:
      - Products
    summary: List all products
    # security:
    #   - bearerAuth: []
    parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search term for product names
      - in: query
        name: limit
        schema:
          type: integer
          default: 10
        description: Number of items to return
      - in: query
        name: offset
        schema:
          type: integer
          default: 0
        description: Number of items to skip
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Product"
      "500":
        description: Server error

  post:
    tags:
      - Products
    summary: Create a new product
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductInput"
    responses:
      "201":
        description: Product created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      "400":
        description: Invalid input
      "401":
        description: Unauthorized
      "403":
        description: Forbidden
      "500":
        description: Server error

/products/{id}:
  get:
    tags:
      - Products
    summary: Get a specific product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      "404":
        description: Product not found
      "500":
        description: Server error

  put:
    tags:
      - Products
    summary: Update a product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductInput"
    responses:
      "200":
        description: Product updated successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      "400":
        description: Invalid input
      "401":
        description: Unauthorized
      "403":
        description: Forbidden
      "404":
        description: Product not found
      "500":
        description: Server error

  delete:
    tags:
      - Products
    summary: Delete a product
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Product deleted successfully
      "401":
        description: Unauthorized
      "403":
        description: Forbidden
      "404":
        description: Product not found
      "500":
        description: Server error

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        inventory:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductInput:
      type: object
      required:
        - name
        - price
        - inventory
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        inventory:
          type: integer

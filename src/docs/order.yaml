/orders:
  post:
    tags:
      - Orders
    summary: Create a new order
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderInput"
    responses:
      "201":
        description: Order created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      "400":
        description: Invalid input
      "401":
        description: Unauthorized
      "500":
        description: Server error

  get:
    tags:
      - Orders
    summary: List all orders for the authenticated user
    security:
      - bearerAuth: []
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Order"
      "401":
        description: Unauthorized
      "500":
        description: Server error

/orders/{id}:
  get:
    tags:
      - Orders
    summary: Get a specific order
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderWithItems"
      "401":
        description: Unauthorized
      "404":
        description: Order not found
      "500":
        description: Server error

components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        status:
          type: string
        total:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderInput:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: integer
              quantity:
                type: integer

    OrderWithItems:
      allOf:
        - $ref: "#/components/schemas/Order"
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/OrderItem"

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        productId:
          type: integer
        quantity:
          type: integer
        price:
          type: integer

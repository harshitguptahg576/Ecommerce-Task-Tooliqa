/logs:
  post:
    tags:
      - Logs
    summary: Create a new log entry
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LogInput"
    responses:
      "201":
        description: Log entry created successfully
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Log"
      "400":
        description: Invalid input
      "401":
        description: Unauthorized
      "500":
        description: Server error

  get:
    tags:
      - Logs
    summary: List all logs
    security:
      - bearerAuth: []
    parameters:
      - in: query
        name: startDate
        schema:
          type: string
          format: date
        description: Start date for log filtering
      - in: query
        name: endDate
        schema:
          type: string
          format: date
        description: End date for log filtering
      - in: query
        name: action
        schema:
          type: string
        description: Filter logs by action
    responses:
      "200":
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Log"
      "401":
        description: Unauthorized
      "403":
        description: Forbidden
      "500":
        description: Server error

components:
  schemas:
    Log:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        action:
          type: string
        details:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    LogInput:
      type: object
      required:
        - action
        - details
      properties:
        action:
          type: string
        details:
          type: object
